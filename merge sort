#include <stdio.h>
void merge(int arr[], int l, int m, int r) 
{
    int i, j, k;
    int n1 = m - l + 1;
    int n2 = r - m;
    int L1[n1], R1[n2];
    for (i = 0; i < n1; i++)
        L1[i] = arr[l + i];
    for (j = 0; j < n2; j++)
        R1[j] = arr[m + 1 + j];

    i = 0;
    j = 0;
    k = l;
    while (i < n1 && j < n2) 
	{
        if (L1[i] <= R1[j]) 
		{
            arr[k] = L1[i];
            i++;
        } 
		else 
		{
            arr[k] = R1[j];
            j++;
        }
        k++;
    }

    while (i < n1) 
	{
        arr[k] = L1[i];
        i++;
        k++;
    }

    while (j < n2) 
	{
        arr[k] = R1[j];
        j++;
        k++;
    }
}

void mergeSort(int arr[], int l, int r) 
{
    if (l < r) 
	{
        int m = l + (r - l) / 2;
        mergeSort(arr, l, m);
        mergeSort(arr, m + 1, r);
        merge(arr, l, m, r);
    }
}

int main() 
{
    int arr[] = {12, 11, 13, 5, 6, 7};
    int n = sizeof(arr) / sizeof(arr[0]);
    printf("Given array is \n");
    for (int i = 0; i < n; i++) 
	{
        printf("%d ", arr[i]);
    }
    printf("\n");
    mergeSort(arr, 0, n - 1);
    printf("Sorted array is \n");
    for (int i = 0; i < n; i++) 
	{
        printf("%d ", arr[i]);
    }
    printf("\n");
    return 0;
}
