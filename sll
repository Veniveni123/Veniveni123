#include <stdio.h>
#include <stdlib.h>
struct Node 
{
    int data;
    struct Node *next;
}*head,*tail,*n;

void displayList() 
{
    struct Node *t;
    t=head;
    while(t!=NULL)
    {
    	printf("%d",t->data);
    	t=t->next;
	}
}

void insertAtBeginning(int num) 
{
   n = (struct Node *)malloc(sizeof(struct Node));
    n->data=num;
    n->next=NULL;
    if(head==NULL)
    {
    	head=n;
    	tail=n;
	}
	else
	{
		n->next=head;
		head=n;
	}
    printf("%d inserted at the beginning.\n", num);
}

void insertAtEnd(int num) 
{
   n = (struct Node *)malloc(sizeof(struct Node));
     n->data=num;
    n->next=NULL;
    if(head==NULL)
    {
    	head=n;
    	tail=n;
	}
	else
	{
		tail->next=n;
		tail=n;
	}
        printf("%d inserted at the end.\n", num);
}

void insertAtPosition(int num, int mid) 
{
	struct Node *t;
    n = (struct Node *)malloc(sizeof(struct Node));
    n->data=num;
    n->next=NULL;
    for(t=head;t!=NULL;t=t->next)
    {
    	if(t->data==mid)
    	{
    		break;
		}
    	else
    	{
	    	n->next=t->next;
	    	t->next=n;
     	}
         printf("%d inserted at position %d.\n", num,mid);
     }{
}

void deleteAtBeginning()
 {
 	struct Node *t;
 	t=head;
 	head=t->next;
 	free(t);
    printf("Node deleted from the beginning.\n");
}

void deleteAtEnd()
 {
    struct Node *t,*tp;
    t=head;
    while(t->next!=NULL)
    {
    	tp=t;
    	t=t->next;
	}
	tail=tp;
	tail->next=NULL;
	free(t);
    printf("Node deleted from the end.\n");
 }
 
void deleteAtPosition(int num)
 {
    struct node*t,*tp;
    t=head;
    while(t->data != mid)
    {
    	tp=t;
    	t=t->next;
	}
	tp->next = tail;
	free(t);
    printf("Node deleted from position %d.\n",num);
}

int main()
 {
    int choice, data, position, n;
    while (1) {
        printf("1. Create List\n");
        printf("2. Display List\n");
        printf("3. Insert at Beginning\n");
        printf("4. Insert at End\n");
        printf("5. Insert at Position\n");
        printf("6. Delete at Beginning\n");
        printf("7. Delete at End\n");
        printf("8. Delete at Position\n");
        printf("9. Exit\n");
        printf("Enter your choice: ");
        scanf("%d", &choice);
        switch (choice) {
            case 1:
                printf("Enter the number of nodes: ");
                scanf("%d", &n);
                createList(n);
                break;
            case 2:
                displayList();
                break;
            case 3:
                printf("Enter the data to insert: ");
                scanf("%d", &data);
                insertAtBeginning(data);
                break;
            case 4:
                printf("Enter the data to insert: ");
                scanf("%d", &data);
                insertAtEnd(data);
                break;
            case 5:
                printf("Enter the data to insert: ");
                scanf("%d", &data);
                printf("Enter the position to insert: ");
                scanf("%d", &position);
                insertAtPosition(data, position);
                break;
            case 6:
                deleteAtBeginning();
                break;
            case 7:
                deleteAtEnd();
                break;
            case 8:
                printf("Enter the position to delete: ");
                scanf("%d", &position);
                deleteAtPosition(position);
                break;
            case 9:
                exit(0);
            default:
                printf("Invalid choice.\n");
        }
    }
    return 0;
}
